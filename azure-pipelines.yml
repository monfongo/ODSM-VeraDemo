# File: azure-pipeline.yml

# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

resources:
  repositories:
    - repository: template-scripts
      type: github
      name: monfongo/VeraDemoTemplateScripts
      endpoint: ODSM-VeraDemo


# Scheduled Daily Builds of master branch
schedules:
- cron: 0 15 * * * # cron syntax defining a schedule
  displayName: Daily Build # friendly name given to a specific schedule
  branches:
    include: [ master ] # which branches the schedule applies to
    #exclude: [ string ] # which branches to exclude from the schedule
  always: true # whether to always run the pipeline or only if there have been source code changes since the last successful scheduled run. The default is false.schedules:

trigger: none
pr: none

pool:
  vmImage: 'windows-latest'

stages: 
- stage: Build
        
  jobs:

  - job: Build_Debug
    displayName: Debug Build
  
    steps:
    - template: steps/abstract-build-steps.yml@template-scripts
      parameters:
        buildConfiguration: 'Debug'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(Build.StagingDirectory)\WebApp.zip 
        artifactName: WebApp_Debug

    
# Testing Stage of CI/CD Pipeline
- stage: Testing

  jobs: 
  - job: Unit_Testing
    displayName: Unit Testing
      
    steps: 
     - task: VSTest@2
       inputs:
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'
            
     - task: DotNetCoreCLI@2
       inputs:
            command: 'test'
            projects: 'verademo-core-test.csproj'


- stage: Security_Testing
  jobs:       
  - template: jobs/veracode-sast-platform-job.yml@template-scripts
    parameters: 
      downloadArtifact: "WebApp_Debug"
      
  - job: SCA_Security_Testing
    displayName: Software Componsition Analysis Testing
  
    steps:
    - bash: echo 'SCA Testing'
    - bash: echo 'Downloading Project'
    
# Deployment Stage of CI/CD Pipeline
# - stage: Deployment

#  jobs:
#   - job: Release_Deployment
#     displayName: Release Deployment
   
#     steps:
#     - bash: echo 'Release Deployed'
